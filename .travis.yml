# Use Dockerized infrastructure

language: python

env:
- CLOUDSDK_CORE_DISABLE_PROMPTS=1
- CLUSTER_NAME=standard-cluster-1
- CLUSTER_PROJECT=gcp-home-dev
- CLUSTER_ZONE=europe-west3-a
- DEPLOYMENT_NAME=saltstack-master
- FQDN=salt.th0r.de
- IMAGE=gcr.io/gcp-home-dev/saltstack-master:661461ebdd18ce3294242d924ca97d0d7d5c3cf1
- MAX_REPLICAS=1
- MIN_REPLICAS=1
- NAMESPACE=salt
- GPG_PRIVATE_KEY=dGVzdAo=


before_install:

- openssl aes-256-cbc -K $encrypted_ffc671bd29c0_key -iv $encrypted_ffc671bd29c0_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
- tar -xzf credentials.tar.gz
- sudo apt-get install apt-transport-https
- export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
- echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
- curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
- sudo apt-get update

install:
- pip install -r pip/requirements.txt
- sudo apt-get install google-cloud-sdk kubectl
- gcloud --version
- mkdir -p ${HOME}/k8s_descriptions

## auth k8s cluster
- gcloud auth activate-service-account --key-file saltstack_deployment_secret.json
- gcloud container clusters get-credentials ${CLUSTER_NAME} --zone ${CLUSTER_ZONE} --project ${CLUSTER_PROJECT}




script:
# Render kubernetes files
- python2 scripts/render_k8s.py
- python2 scripts/deploy_k8s.py
