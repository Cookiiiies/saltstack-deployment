kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ DEPLOYMENT_NAME }}-minion-config
  namespace: {{ NAMESPACE }}
data:
 salt-minion.conf: |

    ############################################
    # salt master configuration
    master: {{ DEPLOYMENT_NAME }}-master

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ DEPLOYMENT_NAME }}-master-config
  namespace: {{ NAMESPACE }}
data:
 salt-master.conf: |

    ############################################
    # salt api configuration

    rest_cherrypy:
      port: 8081
      disable_ssl: True

    external_auth:
      pam:
        {{ API_USERNAME }}:
          - '@wheel':
            - key.gen_accept

    ############################################
    # pillar configuration

    ext_pillar_first: True

    pillar_merge_lists: true

    ext_pillar:
      - git:
        - master git@github.com:Cookiiiies/pillar.git:
          - env: base
          - root: pillar
          - privkey: /etc/salt/secrets/ssh_keys/saltdeployer.priv
          - pubkey: /etc/salt/secrets/ssh_keys/saltdeployer.pub

      - google_storage:
          credentials: /etc/salt/secrets/gcp/credentials.json
          project: {{ PILLAR_BUCKET_PROJECT }}
          bucked_id: {{ PILLAR_BUCKET_ID }}
          prefix: ".pem"

    ############################################
    # fileserver configuration

    fileserver_backend:
      - roots
      - gitfs

    gitfs_remotes:
      - 'git@github.com:Cookiiiies/salt.git':
        - mountpoint: salt://
        - root: 'salt/'

    gitfs_provider: pygit2
    gitfs_privkey: /etc/salt/secrets/ssh_keys/saltdeployer.priv
    gitfs_pubkey: /etc/salt/secrets/ssh_keys/saltdeployer.pub


    file_roots:
      base:
        - /srv/salt
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ DEPLOYMENT_NAME }}-nginx-proxy
  namespace: {{ NAMESPACE }}
data:
  salt-proxy.conf: |-
    server {
      listen 80 default_server;
      listen [::]:80 default_server;
      server_name {{ SALT_API_HOST }};

      location /health {
        add_header  X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
        access_log off;
        return 200 "healthy\n";

      }

      location / {
        proxy_redirect off;
        proxy_set_header        X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_pass_header Server;
        proxy_pass          http://localhost:8081;
        proxy_read_timeout  3600;
      }

    }

