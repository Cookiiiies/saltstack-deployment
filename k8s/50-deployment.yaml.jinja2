kind: "Deployment"
apiVersion: "extensions/v1beta1"
metadata:
  name: {{ DEPLOYMENT_NAME }}-master
  namespace: {{ NAMESPACE }}
  labels:
    name: {{ DEPLOYMENT_NAME }}-master
spec:
  replicas: {{ MIN_REPLICAS }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      name: {{ DEPLOYMENT_NAME }}-master
  template:
    metadata:
      name: {{ DEPLOYMENT_NAME }}-master
      labels:
        name: {{ DEPLOYMENT_NAME }}-master
    spec:
      containers:
        - name: proxy
          image: {{ IMAGE_NGINX }}
          imagePullPolicy: Always
          env:
            - name: SALT_API_HOST
              value: {{ SALT_API_HOST }}
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /health
              port: 443
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /health
              port: 443
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nginx-proxy

        - name: saltstack-master
          image: {{ IMAGE_MASTER }}
          imagePullPolicy: Always
          env:
            - name: GPG_PRIV_KEY_PATH
              value: "/etc/salt/secret_gpg/saltdeployer.gpg.priv"
            - name: API_USERNAME
              value: "{{ API_USERNAME }}"
            - name: API_PASSWORD
              value: "{{ API_PASSWORD }}"
            - name: LOG_LEVEL
              value: "{{ LOG_LEVEL }}"
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 15
          resources:
            requests:
              memory: "400Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          ports:
            - containerPort: 4505
            - containerPort: 4506
          volumeMounts:
            - mountPath: /etc/salt/secrets/gcp/
              name: master-gcp-secret
            - mountPath: /etc/salt/master.d/
              name: master-conf
            - mountPath: /etc/salt/secret_gpg/
              name: gpg-keys
            - mountPath: /etc/salt/secrets/ssh_keys/
              name: ssh-keys
            - mountPath: /var/run
              name: saltstack-pid

        - name: saltstack-api
          image: {{ IMAGE_API }}
          imagePullPolicy: Always
          env:
            - name: LOG_LEVEL
              value: "{{ LOG_LEVEL }}"
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 15
          resources:
            requests:
              memory: "400Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          ports:
            - containerPort: 8081
          volumeMounts:
            - mountPath: /var/run/
              name: saltstack-pid
            - mountPath: /etc/salt/master.d/
              name: saltstack-conf

      volumes:
        - name: master-conf
          configMap:
            name: {{ DEPLOYMENT_NAME }}-master-config
        - name: master-gcp-secret
          secret:
            secretName: {{ DEPLOYMENT_NAME }}-master-gcp-access
        - name: gpg-keys
          secret:
            secretName: {{ DEPLOYMENT_NAME }}-saltdeployer-gpg-keys
        - name: ssh-keys
          secret:
            secretName: {{ DEPLOYMENT_NAME }}-saltdeployer-ssh-keys
        - name: nginx-proxy
          configMap:
            name: {{ DEPLOYMENT_NAME }}-nginx-proxy
        - name: saltstack-pid
          emptyDir: {}

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ DEPLOYMENT_NAME }}-certbot
  namespace: {{ NAMESPACE }}
spec:
  schedule: "15 12 */1 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: certbot
              image: {{ IMAGE_CERTBOT }}
              env:
                - name: BUCKET_ID
                  value: {{ PILLAR_BUCKET_ID }}
                - name: PROJECT_ID
                  value: {{ PILLAR_BUCKET_PROJECT }}
                - name: DOMAINS
                  value: {{ DOMAINS }}
                - name: CERTBOT_SERVER
                  value: {{ CERTBOT_SERVER }}
                - name: BACKUP_FILENAME
                  value: {{ DEPLOYMENT_NAME }}-master-certbot.tar.gz
                - name: GOOGLE_CREDENTIALS_FILE_DNS
                  value: "/secrets/dns.json"
                - name: GOOGLE_CREDENTIALS_FILE_BUCKET
                  value: "/secrets/bucket.json"
              volumeMounts:
                - mountPath: /secrets/
                  name: gcp-secret
          restartPolicy: OnFailure
          volumes:
            - name: gcp-secret
              secret:
                secretName: {{ DEPLOYMENT_NAME }}-certbot-gcp